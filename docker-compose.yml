services:

  database:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

      
  book-api:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/books_api_service/static
      - media_volume:/books_api_service/media
    environment:
      - DB_HOST=database
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASS=postgres

    # админ автоматически авторизовавыется
    command: >
      sh -c "python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py initadmin &&
      python manage.py runserver 0.0.0.0:8000" 

    depends_on:
      database:
        condition: service_healthy
        








volumes:
  static_volume:
  media_volume:
  postgres_storage:
